{"version":3,"sources":["../../../src/components/SiteItem/index.tsx"],"names":["IMAGE_PULL_INTERVAL","COMMIT_PULL_INTERVAL","getCommit","siteId","personalToken","commitResult","commitRef","updatedAt","Promise","resolve","url","headers","authorization","fetch","method","then","resp","json","latestCommit","find","deploy","commit_ref","latestDeploy","timestamp","Date","updated_at","substr","toLocaleString","getImageUrl","baseUrl","time","getTime","useBadgeImage","src","setSrc","update","interval","window","setInterval","clearInterval","useCommit","commit","setCommit","useDeploy","site","onDeploy","updateBadge","updateCommit","timeoutRef","clearTimeout","current","timeoutCommitRef","setTimeout","SiteItem","props","hasBadgeError","setHasBadgeError","id","name","title","adminUrl","buildHookId","badge","handleDeploy","handleBadgeError","fetchCommit"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useCallback, useEffect, useRef, useState} from 'react'\nimport {Button, Flex, Box, Card, Text, Stack, Label} from '@sanity/ui'\nimport {DeployAction, Site} from '../../types'\nimport Links from './Links'\n\ninterface Props {\n  site: Site\n  personalToken?: string\n  onDeploy: DeployAction\n}\n\ninterface CommitResult {\n  commitRef: string\n  updatedAt: string\n}\n\nexport const IMAGE_PULL_INTERVAL = 10000\nexport const COMMIT_PULL_INTERVAL = 60000\n\nconst getCommit = (siteId: string, personalToken?: string): Promise<CommitResult> => {\n  let commitResult: CommitResult = {commitRef: '', updatedAt: ''}\n  if (!personalToken) return new Promise((resolve) => resolve(commitResult))\n  const url = `https://api.netlify.com/api/v1/sites/${siteId}/deploys`\n  const headers = {\n    authorization: `Bearer ${personalToken}`,\n  }\n  return fetch(url, {method: 'get', headers}).then((resp) => {\n    return resp.json().then((json) => {\n      const latestCommit = json.find((deploy: any) => !!deploy.commit_ref)\n      const latestDeploy = json[0]\n      const timestamp = new Date(latestDeploy.updated_at)\n      commitResult = {\n        commitRef: latestCommit.commit_ref.substr(0, 7),\n        updatedAt: timestamp.toLocaleString(),\n      }\n      return commitResult\n    })\n  })\n}\n\nconst getImageUrl = (siteId: string) => {\n  const baseUrl = `https://api.netlify.com/api/v1/badges/${siteId}/deploy-status`\n  const time = new Date().getTime()\n\n  return `${baseUrl}?${time}`\n}\n\nconst useBadgeImage = (siteId: string) => {\n  const [src, setSrc] = useState(() => getImageUrl(siteId))\n  const update = useCallback(() => setSrc(getImageUrl(siteId)), [siteId])\n\n  useEffect(() => {\n    const interval = window.setInterval(update, IMAGE_PULL_INTERVAL)\n    return () => window.clearInterval(interval)\n  }, [update])\n\n  return [src, update] as const\n}\n\nconst useCommit = (siteId: string, personalToken?: string) => {\n  if (!personalToken) return []\n  const [commit, setCommit] = useState({commitRef: '', updatedAt: ''})\n  const update = useCallback(async () => {\n    return getCommit(siteId, personalToken).then((resp: CommitResult) => {\n      if (!resp.commitRef) return\n      setCommit(resp)\n    })\n  }, [siteId, personalToken])\n\n  useEffect(() => {\n    const interval = window.setInterval(update, COMMIT_PULL_INTERVAL)\n    return () => window.clearInterval(interval)\n  }, [update])\n  return [commit, update] as const\n}\n\nconst useDeploy = (\n  site: Site,\n  onDeploy: DeployAction,\n  updateBadge: () => void,\n  updateCommit: () => void\n) => {\n  const timeoutRef = useRef(-1)\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), [])\n\n  const timeoutCommitRef = useRef(-1)\n  useEffect(() => () => window.clearTimeout(timeoutCommitRef.current), [])\n\n  return useCallback(() => {\n    onDeploy(site)\n    timeoutRef.current = window.setTimeout(() => {\n      updateBadge()\n      updateCommit()\n    }, 1000)\n  }, [site, onDeploy, updateBadge, updateCommit])\n}\n\nconst SiteItem: FunctionComponent<Props> = (props) => {\n  const [hasBadgeError, setHasBadgeError] = useState(false)\n  const {site, onDeploy, personalToken} = props\n  const {id, name, title, url, adminUrl, buildHookId} = site\n\n  const [badge, updateBadge] = useBadgeImage(id)\n  const [commit, updateCommit] = useCommit(id, personalToken)\n  const handleDeploy = useDeploy(site, onDeploy, updateBadge, updateCommit)\n  const handleBadgeError = () => {\n    setHasBadgeError(true)\n  }\n\n  useEffect(() => {\n    const fetchCommit = async () => updateCommit()\n    fetchCommit()\n  }, [updateCommit])\n\n  return (\n    <Flex as=\"li\">\n      <Box flex={1} paddingY={2} paddingX={3}>\n        <Stack space={3}>\n          <Text as=\"h4\">\n            {title || name}\n            <Links url={url} adminUrl={adminUrl} />\n          </Text>\n          {commit.commitRef ? (\n            <React.Fragment>\n              <Text as=\"span\">\n                &nbsp;Commit: <strong>{commit.commitRef}</strong>\n              </Text>\n              <Text as=\"span\">&nbsp;Last deploy was on ({commit.updatedAt})</Text>\n            </React.Fragment>\n          ) : (\n            null\n          )}\n          <Flex justify=\"flex-start\">\n            {!hasBadgeError && <img src={badge} onError={handleBadgeError} alt=\"Badge\" />}\n            {hasBadgeError && (\n              <Card tone=\"critical\" radius={2} padding={2}>\n                <Label size={0} muted>\n                  Failed to load badge\n                </Label>\n              </Card>\n            )}\n          </Flex>\n        </Stack>\n      </Box>\n\n      {buildHookId ? (\n        <Box paddingY={2} paddingX={3}>\n          <Button mode=\"ghost\" onClick={handleDeploy} text=\"Deploy\" />\n        </Box>\n      ) : null}\n    </Flex>\n  )\n}\n\nexport default SiteItem\n"],"file":"index.js"}